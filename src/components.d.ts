/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CttToast {
    }
    interface CttToastItem {
        "autoRemove": boolean;
        "cooldown": number;
        "hasDescription": boolean;
        "icon": string;
        "progress": boolean;
        "toastTitle": string;
        "type": string;
        "viewLessButtonText": string;
        "viewMoreButtonText": string;
    }
}
declare global {
    interface HTMLCttToastElement extends Components.CttToast, HTMLStencilElement {
    }
    var HTMLCttToastElement: {
        prototype: HTMLCttToastElement;
        new (): HTMLCttToastElement;
    };
    interface HTMLCttToastItemElement extends Components.CttToastItem, HTMLStencilElement {
    }
    var HTMLCttToastItemElement: {
        prototype: HTMLCttToastItemElement;
        new (): HTMLCttToastItemElement;
    };
    interface HTMLElementTagNameMap {
        "ctt-toast": HTMLCttToastElement;
        "ctt-toast-item": HTMLCttToastItemElement;
    }
}
declare namespace LocalJSX {
    interface CttToast {
    }
    interface CttToastItem {
        "autoRemove"?: boolean;
        "cooldown"?: number;
        "hasDescription"?: boolean;
        "icon"?: string;
        "progress"?: boolean;
        "toastTitle"?: string;
        "type"?: string;
        "viewLessButtonText"?: string;
        "viewMoreButtonText"?: string;
    }
    interface IntrinsicElements {
        "ctt-toast": CttToast;
        "ctt-toast-item": CttToastItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ctt-toast": LocalJSX.CttToast & JSXBase.HTMLAttributes<HTMLCttToastElement>;
            "ctt-toast-item": LocalJSX.CttToastItem & JSXBase.HTMLAttributes<HTMLCttToastItemElement>;
        }
    }
}
